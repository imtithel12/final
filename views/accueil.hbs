<!DOCTYPE html>
<html lang="en">

<head>
    <style>
        @import'https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css';
        @import'https://stackpath.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.bundle.min.js';
        @import'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js';

        body {
            background-color: white;
            font-family: sans-serif;

        }

        a {
            text-decoration: none;
            color: black;
        }

        .btn {
            width: 100px;
            border-style: solid;
            border-radius: 45%;
            color: white;
            background-color: #DA70D6;
        }

        .buttonl {
            text-decoration: none;
        }

        .navbar {
            padding-bottom: 0px;
        }

        .desc {
            margin-top: 10%;
            margin-left: 2%;
        }

        .text1 {
            color: #DA70D6;
            font-weight: 700;
        }

        .detail {
            color: #a4adb8;
        }

        .btn-submit {
            border-radius: 50px;
            border: none;
            height: 35px;
            width: 120px;
            font-size: 14px;
            font-weight: 500;
            background-color: #DA70D6;
            color: #fff;
            font-weight: 500;
            margin-left: 15%;

        }

        .btn-submit1 {
            border-radius: 50px;
            border: none;
            height: 35px;
            width: 120px;
            font-size: 14px;
            font-weight: 500;
            background-color: white;
            color: black;
            font-weight: 500;
            margin-left: 15%;

        }

        .accuiel {
            position: absolute;
            top: 40%;
            width: 45%;
            margin-left: 53%;
            margin-top: calc(-18%);
        }

        .card1 {
            margin-left: 5%;
        }

        #navLinks {
            margin-right: 5%;
        }

        .nav-link {
            color: white;
        }
    </style>

</head>

<body>

    <style>
        #egg {
            display: block;
            position: absolute;
            width: 700px;
            height: 400px;
            background: linear-gradient(to right, #DA70D6, #f845e0);
            margin-left: 48.75%;
            margin-top: calc(-20%);
            border-bottom-left-radius: 50%;
            border-bottom-right-radius: 50%;
            border-top-left-radius: 50%;
            color: #8906a3;
        }
    </style>
    <div id="egg"></div>
    <nav id="mainNavbar" class="navbar navbar-expand-md py-0 fixed-top fixed-left ">
        <br><br><br><br>
        <a href="#" class="navbar-brand"><img class="logo" width="18%" src="./img/logo.png"></a>
        <div class="collapse navbar-collapse" id="navLinks">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a href="/" class="nav-link">Home</a>
                </li>
                <li class="nav-item">
                    <a href="" onclick="" class="nav-link">About</a>
                </li>
                <li class="nav-item">
                    <a href="" class="nav-link">Services</a>
                </li>
                <li class="nav-item">
                    <a href="" class="nav-link">Contacts</a>
                </li>

                <div class="my-button container">
                    <a class="buttonl" href="/inscrire">
                        <button class="btn btn-raised shadow my-button w-xs btn-submit1">Commencer</button>
                    </a>
                </div>
            </ul>
        </div>
    </nav>

    <div class="desc py-4 align-items-center">
        <div class="card1 mt-3 p-3 g-2">
            <div class="mt-3">
                <h2 class="text1">Plateforme d'Analyse d'Audience<br>
                    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;
                    pour les Sites Web
                </h2>
            </div>

            <div class="detail mt-5">
                <small>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                    TrackMySite est une plateforme en ligne qui offre un suivi détaillé et une analyse<br>

                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                    approfondie des performances des sites web, y compris le trafic, les conversions,<br>

                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                    le référencement et le contenu, avec la possibilité de créer des rapports<br>

                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                    personnalisés et des intégrations avec d'autres outils populaires.</small>
            </div><br><br>

            <a class="buttonl" href="/inscrire">
                <button class="btn-submit">Commencer</button>
            </a>
        </div>
        <img class="accuiel" src="./img/accuiel2.png">
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var urlParams = new URLSearchParams(window.location.search);
            var trackingId = urlParams.get('trackingId');
            if (!trackingId) {
                trackingId = "2d017fb7-36c6-48be-9fdb-8f2345a4d441";
            }

            var startTime = Math.floor(new Date().getTime() / 1000);  // Capture the start time in seconds as soon as the DOM is loaded

            function addBrowserInfo(data) {
                // Adds browser's language and user-agent to the data object
                data.language = navigator.language || navigator.userLanguage;
                data.userAgent = navigator.userAgent;
            }

            function addGeolocation(data, callback) {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function (position) {
                        data.latitude = position.coords.latitude;
                        data.longitude = position.coords.longitude;
                        callback(data);
                    }, function (error) {
                        console.error('Geolocation error:', error);
                        data.latitude = "Unavailable";
                        data.longitude = "Unavailable";
                        callback(data);
                    });
                } else {
                    console.error('Geolocation is not supported by this browser.');
                    data.latitude = "Unsupported";
                    data.longitude = "Unsupported";
                    callback(data);
                }
            }

            function addIpAddress(data, callback) {
                fetch('https://api.ipify.org?format=json')
                    .then(response => response.json())
                    .then(ipData => {
                        data.ipAddress = ipData.ip;
                        callback(data);
                    })
                    .catch(error => {
                        console.error('Error fetching IP address:', error);
                        data.ipAddress = "Unavailable";
                        callback(data);
                    });
            }

            function checkAndSendData(data) {
                var isFirstVisit = localStorage.getItem('firstVisit') === null;
                if (isFirstVisit) {
                    localStorage.setItem('firstVisit', 'false');
                    data.userType = 'new';
                } else {
                    data.userType = 'returning';
                }
                sendData(data);
            }

            function sendData(data) {
                data.tracking_id = trackingId;
                addBrowserInfo(data);
                addGeolocation(data, function (geoData) {
                    addIpAddress(geoData, function (finalData) {
                        fetch('http://localhost:3008/api/track-interaction', {
                            method: 'POST',
                            mode: 'cors',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(finalData)
                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => {
                                console.log('Data sent successfully:', data);
                            })
                            .catch(error => {
                                console.error('Error sending data:', error);
                            });
                    });
                });
            }

            // Monitor when the page is fully loaded
            window.addEventListener('load', function () {
                var endTime = Math.floor(new Date().getTime() / 1000);
                var visitDuration = endTime - startTime;
                checkAndSendData({ event_type: 'visit', page: window.location.href, duration: visitDuration });
            });

            // Monitor when the user is about to leave the page
            window.addEventListener('beforeunload', function () {
                var endTime = Math.floor(new Date().getTime() / 1000);
                var visitDuration = endTime - startTime;
                checkAndSendData({ event_type: 'leave', page: window.location.href, duration: visitDuration });
            });

            // Track clicks on all links
            document.querySelectorAll('a').forEach(function (link) {
                link.addEventListener('click', function () {
                    checkAndSendData({ event_type: 'click', element: 'link', timestamp: Math.floor(new Date().getTime() / 1000), page: link.href });
                });
            });

            // Track clicks on all buttons
            document.querySelectorAll('button').forEach(function (button) {
                button.addEventListener('click', function () {
                    checkAndSendData({ event_type: 'click', element: 'button', timestamp: Math.floor(new Date().getTime() / 1000), page: window.location.href });
                });
            });
        });
    </script>
</body>

</html>